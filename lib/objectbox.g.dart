// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'db/hello_item_dao.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 7381230833836371102),
      name: 'HelloItemDao',
      lastPropertyId: const obx_int.IdUid(15, 6368565170305001165),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 841148174246609280),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1109097982617971947),
            name: 'author',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1893207811600451295),
            name: 'author_avatar',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 999215793504668250),
            name: 'comment_total',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 2320739504555130015),
            name: 'item_id',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4279746818594955644),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1552583699479848506),
            name: 'primary_lang',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8822947219106742709),
            name: 'summary',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 6947777606004826790),
            name: 'summary_en',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 2763490329711559771),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7194100990612535800),
            name: 'title_en',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 781047861833753994),
            name: 'updated_at',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 5572895895825256920),
            name: 'type',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 7454612348067389837),
            name: 'deal_type',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 6368565170305001165),
            name: 'local_content',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 7381230833836371102),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    HelloItemDao: obx_int.EntityDefinition<HelloItemDao>(
        model: _entities[0],
        toOneRelations: (HelloItemDao object) => [],
        toManyRelations: (HelloItemDao object) => {},
        getId: (HelloItemDao object) => object.id,
        setId: (HelloItemDao object, int id) {
          object.id = id;
        },
        objectToFB: (HelloItemDao object, fb.Builder fbb) {
          final authorOffset = fbb.writeString(object.author);
          final author_avatarOffset = fbb.writeString(object.author_avatar);
          final item_idOffset = fbb.writeString(object.item_id);
          final nameOffset = fbb.writeString(object.name);
          final primary_langOffset = fbb.writeString(object.primary_lang);
          final summaryOffset = fbb.writeString(object.summary);
          final summary_enOffset = fbb.writeString(object.summary_en);
          final titleOffset = fbb.writeString(object.title);
          final title_enOffset = fbb.writeString(object.title_en);
          final updated_atOffset = fbb.writeString(object.updated_at);
          final local_contentOffset = fbb.writeString(object.local_content);
          fbb.startTable(16);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, authorOffset);
          fbb.addOffset(2, author_avatarOffset);
          fbb.addInt64(3, object.comment_total);
          fbb.addOffset(4, item_idOffset);
          fbb.addOffset(5, nameOffset);
          fbb.addOffset(6, primary_langOffset);
          fbb.addOffset(7, summaryOffset);
          fbb.addOffset(8, summary_enOffset);
          fbb.addOffset(9, titleOffset);
          fbb.addOffset(10, title_enOffset);
          fbb.addOffset(11, updated_atOffset);
          fbb.addInt64(12, object.type);
          fbb.addInt64(13, object.deal_type);
          fbb.addOffset(14, local_contentOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final typeParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0);
          final deal_typeParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0);
          final item_idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final primary_langParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 16, '');
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 22, '');
          final updated_atParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 26, '');
          final authorParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final author_avatarParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final comment_totalParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final summaryParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 18, '');
          final summary_enParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 20, '');
          final title_enParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 24, '');
          final local_contentParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 32, '');
          final object = HelloItemDao(
              id: idParam,
              type: typeParam,
              deal_type: deal_typeParam,
              item_id: item_idParam,
              primary_lang: primary_langParam,
              title: titleParam,
              updated_at: updated_atParam,
              author: authorParam,
              author_avatar: author_avatarParam,
              comment_total: comment_totalParam,
              name: nameParam,
              summary: summaryParam,
              summary_en: summary_enParam,
              title_en: title_enParam,
              local_content: local_contentParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [HelloItemDao] entity fields to define ObjectBox queries.
class HelloItemDao_ {
  /// See [HelloItemDao.id].
  static final id =
      obx.QueryIntegerProperty<HelloItemDao>(_entities[0].properties[0]);

  /// See [HelloItemDao.author].
  static final author =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[1]);

  /// See [HelloItemDao.author_avatar].
  static final author_avatar =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[2]);

  /// See [HelloItemDao.comment_total].
  static final comment_total =
      obx.QueryIntegerProperty<HelloItemDao>(_entities[0].properties[3]);

  /// See [HelloItemDao.item_id].
  static final item_id =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[4]);

  /// See [HelloItemDao.name].
  static final name =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[5]);

  /// See [HelloItemDao.primary_lang].
  static final primary_lang =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[6]);

  /// See [HelloItemDao.summary].
  static final summary =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[7]);

  /// See [HelloItemDao.summary_en].
  static final summary_en =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[8]);

  /// See [HelloItemDao.title].
  static final title =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[9]);

  /// See [HelloItemDao.title_en].
  static final title_en =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[10]);

  /// See [HelloItemDao.updated_at].
  static final updated_at =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[11]);

  /// See [HelloItemDao.type].
  static final type =
      obx.QueryIntegerProperty<HelloItemDao>(_entities[0].properties[12]);

  /// See [HelloItemDao.deal_type].
  static final deal_type =
      obx.QueryIntegerProperty<HelloItemDao>(_entities[0].properties[13]);

  /// See [HelloItemDao.local_content].
  static final local_content =
      obx.QueryStringProperty<HelloItemDao>(_entities[0].properties[14]);
}
